name: Release

on:
  push:
    tags:
      - 'v*'        # v1.0.0 などタグ Push 時に実行

jobs:
  build-and-publish:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest    # Windows x64
            args: ''
          - os: macos-latest      # macOS (Apple/Intel 両対応)
            args: ''

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write             # Release 作成権限

    steps:
      # 1. コードをチェックアウト
      - name: Checkout
        uses: actions/checkout@v3

      # 2. Node.js セットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3. Rust ツールチェインセットアップ
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # 4. フロントエンド依存インストール
      - name: Install frontend deps
        run: npm ci --prefix suiperchat_streamer_app

      # 5. Npcap SDK インストール (Windows のみ)
      - name: Install Npcap SDK (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $version = '1.15'
          $zip     = "npcap-sdk-$version.zip"
          $url     = "https://npcap.com/dist/$zip"

          Write-Host "Downloading Npcap SDK $version from $url"
          Invoke-WebRequest $url -OutFile $zip

          Write-Host "Extracting Npcap SDK..."
          Expand-Archive $zip -DestinationPath $PWD

          $sdkLib = Join-Path $PWD "npcap-sdk-$version\Lib\x64"
          Write-Host "Npcap SDK Lib path: $sdkLib"

          # CI 全体で使う環境変数にセット
          Add-Content -Path $env:GITHUB_ENV -Value "NPCAP_LIB_PATH=$sdkLib"

      # 6. デバッグ: NPCAP_LIB_PATH の確認 (Windows のみ)
      - name: Debug NPCAP_LIB_PATH (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: Write-Host "NPCAP_LIB_PATH = $env:NPCAP_LIB_PATH"

      # 7. Tauri ビルド & GitHub Release
      - name: Build & Release (Tauri)
        uses: tauri-apps/tauri-action@v0
        with:
          projectPath:        suiperchat_streamer_app
          tagName:            ${{ github.ref_name }}
          releaseName:        ${{ github.ref_name }}
          releaseDraft:       false
          includeUpdaterJson: true
          args:               ${{ matrix.args }}
        env:
          GITHUB_TOKEN:                       ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY:          ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
